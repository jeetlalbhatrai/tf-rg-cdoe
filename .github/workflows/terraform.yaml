name: Terraform Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment (dev/prod)"
        required: true
        default: "dev"
      scanning_required:
        description: "Run Terraform Security Scans?"
        required: true
        default: "true"

jobs:
  terraform-plan:
    name: "Terraform Init & Plan"
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # ðŸ‘ˆ Required for OIDC
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Azure using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.5

      - name: Terraform Init
        run: terraform -chdir=environment/${{ github.event.inputs.environment }} init \
          -backend-config="resource_group_name=jeet-rg" \
          -backend-config="storage_account_name=tfstatefilestodoapp" \
          -backend-config="container_name=terraformcontainer" \
          -backend-config="key=${{ github.event.inputs.environment }}.terraform.tfstate"

      - name: Terraform Plan
        run: terraform -chdir=environment/${{ github.event.inputs.environment }} plan -out=tfplan

  tf-scanning:
    name: "Terraform Security Scans"
    needs: terraform-plan
    if: ${{ github.event.inputs.scanning_required == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.3

      - name: Run tflint
        uses: terraform-linters/tflint-action@v0.4.0

      - name: Run checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: .

  terraform-apply:
    name: "Terraform Apply"
    needs: [terraform-plan, tf-scanning]
    runs-on: ubuntu-latest
    environment: production   # ðŸ‘ˆ Protect this environment with approval in GitHub UI
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Azure using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.5

      - name: Terraform Init
        run: terraform -chdir=environment/${{ github.event.inputs.environment }} init \
          -backend-config="resource_group_name=jeet-rg" \
          -backend-config="storage_account_name=tfstatefilestodoapp" \
          -backend-config="container_name=terraformcontainer" \
          -backend-config="key=${{ github.event.inputs.environment }}.terraform.tfstate"

      - name: Terraform Apply
        run: terraform -chdir=environment/${{ github.event.inputs.environment }} apply -auto-approve tfplan
